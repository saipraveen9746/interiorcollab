# Generated by Django 5.0.2 on 2024-04-09 05:42

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AgentProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='agent_photos')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField()),
                ('propertytype', models.CharField(choices=[('home', 'Home'), ('shop', 'Shop'), ('office', 'Office')], max_length=1000, null=True)),
                ('catgory', models.CharField(choices=[('kitchen', 'Kitchen'), ('bathroom', 'Bathroom'), ('bedroom', 'Bedroom'), ('diningroom', 'Diningroom'), ('reception', 'Reception'), ('pantry', 'Pantry'), ('meetingroom', 'Meetingroom'), ('shoproom', 'Shoproom')], max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Home',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100, unique=True)),
                ('photo', models.URLField(max_length=10000)),
                ('Category', models.CharField(choices=[('kitchen', 'Kitchen'), ('bedroom', 'Bed Room'), ('bathroom', 'Bath Room'), ('diningroom', 'Dining Room'), ('visitingroom', 'Visitingroom'), ('kids room', 'Kids Room')], max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('Description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='NeededProducts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('photo', models.URLField(max_length=10000)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField()),
                ('catgory', models.CharField(choices=[('bookshelves', 'Bookshelves'), ('centertable', 'Centertable'), ('lcd display unit', 'LCD Display Unit'), ('living-dining-partition', 'Living-Dining Partition'), ('prayer unit', 'Prayer Unit'), ('shoe rack', 'Shoe Rack'), ('sofa and single chairs', 'Sofa and Single Chairs'), ('bed', 'Bed'), ('dressing unit', 'Dressing Unit'), ('wardrobe', 'Wardrobe'), ('bar counter', 'Bar Counter'), ('crockery shelf', 'Crockery Shelf'), ('dining chair', 'Dining Chair'), ('dining table', 'Dining Table'), ('wash', 'Wash'), ('study unit', 'Study Unit'), ('wardrobe cum study table', 'Wardrobe Cum Study Table')], max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='office',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100, unique=True)),
                ('photo', models.URLField(max_length=10000)),
                ('Category', models.CharField(choices=[('reception', 'Reception'), ('meeting_room', 'Meeting Room'), ('pantry', 'Pantry'), ('bathroom', 'Bathroom')], max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('Description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=100)),
                ('photo', models.URLField(max_length=10000)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quantity', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IDMapp.cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IDMapp.product')),
            ],
        ),
        migrations.AddField(
            model_name='cart',
            name='items',
            field=models.ManyToManyField(through='IDMapp.CartItem', to='IDMapp.product'),
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('Customer', 'customer'), ('Agent', 'agent')], default='customer', max_length=20, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='customuser_set', related_query_name='customuser', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_set', related_query_name='customuser', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProductBuy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('apartment', models.CharField(max_length=200)),
                ('place', models.CharField(max_length=200)),
                ('pincode', models.IntegerField()),
                ('phone_number', models.BigIntegerField()),
                ('quantity', models.IntegerField(null=True)),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='IDMapp.product')),
                ('user', models.ForeignKey(limit_choices_to={'user_type': 'Customer'}, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('apartment', models.CharField(max_length=255, verbose_name='Apartment')),
                ('pincode', models.CharField(max_length=10, verbose_name='Pincode')),
                ('place', models.CharField(max_length=255, verbose_name='Place')),
                ('phone_no', models.CharField(max_length=15, verbose_name='Phone Number')),
                ('quantity', models.PositiveIntegerField(default=0, verbose_name='Quantity')),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Total Price')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IDMapp.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Order Detail',
                'verbose_name_plural': 'Order Details',
            },
        ),
        migrations.CreateModel(
            name='Order_Items',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IDMapp.product')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='IDMapp.product')),
                ('user', models.ForeignKey(limit_choices_to={'user_type': 'Customer'}, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OFFiceBookDesign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True)),
                ('email', models.TextField(max_length=10000, null=True)),
                ('contact_no', models.BigIntegerField(null=True)),
                ('address', models.TextField(null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IDMapp.office')),
                ('user', models.ForeignKey(limit_choices_to={'user_type': 'Customer'}, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ListWish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IDMapp.product')),
                ('user', models.ForeignKey(limit_choices_to={'user_type': 'Customer'}, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HomeBookDesign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True)),
                ('email', models.TextField(max_length=10000, null=True)),
                ('contact_no', models.BigIntegerField(null=True)),
                ('address', models.TextField(null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IDMapp.home')),
                ('user', models.ForeignKey(limit_choices_to={'user_type': 'Customer'}, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ContactUS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('contact_no', models.BigIntegerField(null=True)),
                ('description', models.TextField(null=True)),
                ('user', models.ForeignKey(limit_choices_to={'user_type': 'Customer'}, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CartBuy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('name', models.CharField(max_length=200, null=True)),
                ('apartment', models.CharField(max_length=200)),
                ('place', models.CharField(max_length=200)),
                ('pincode', models.IntegerField()),
                ('phone_number', models.BigIntegerField()),
                ('product', models.ManyToManyField(to='IDMapp.cartitem')),
                ('user', models.ForeignKey(limit_choices_to={'user_type': 'Customer'}, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='cart',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='AgentProductBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True)),
                ('email', models.TextField(max_length=10000, null=True)),
                ('contact_no', models.BigIntegerField(null=True)),
                ('address', models.TextField(null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='IDMapp.agentproduct')),
                ('agent', models.ForeignKey(limit_choices_to={'user_type': 'Agent'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bookings_created', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(limit_choices_to={'user_type': 'Customer'}, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='agentproduct',
            name='user',
            field=models.ForeignKey(limit_choices_to={'user_type': 'Agent'}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customer_products', to=settings.AUTH_USER_MODEL),
        ),
    ]
